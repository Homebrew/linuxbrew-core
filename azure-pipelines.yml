trigger: none
pr:
  autoCancel: true
  branches:
    include:
    - '*'

jobs:

- job: BuildLinuxbrewCoreBottles
  timeoutInMinutes: 360

  pool:
    vmImage: 'ubuntu-16.04'

  container:
    image: homebrew/brew:latest

  steps:
  - script: printenv
    displayName: Azure printenv

  - bash: |
      mkdir -p /tmp/bottles
      cd /tmp/bottles
      umask 022
    displayName: Setup /tmp/bottles
  - bash: |
      git config --global user.name LinuxbrewTestBot
      git config --global user.email testbot@linuxbrew.sh
      cd /home/linuxbrew/.linuxbrew/Homebrew
      sudo git fetch origin --tags
      sudo git reset --hard origin/master
    displayName: Setup Homebrew
  - bash: |
      sudo rm -rf /home/linuxbrew/.linuxbrew/Homebrew/Library/Taps/homebrew/homebrew-core
      sudo cp -a $(Build.Repository.LocalPath) /home/linuxbrew/.linuxbrew/Homebrew/Library/Taps/homebrew/homebrew-core
    displayName: Copy homebrew-core
  - bash: |
      cd /home/linuxbrew/.linuxbrew/Homebrew/Library/Taps/homebrew/homebrew-core
      git checkout -b test
      git fetch origin "master:master" "pull/$SYSTEM_PULLREQUEST_PULLREQUESTNUMBER/head:pr"
      git checkout pr
    displayName: Checkout PR
  - bash: |
      cd /tmp/bottles
      sudo -E /home/linuxbrew/.linuxbrew/bin/brew test-bot \
        --tap=homebrew/core \
        --bintray-org=linuxbrew \
        --git-name=LinuxbrewTestBot \
        --git-email=testbot@linuxbrew.sh \
        --keep-old
      if [ $? -gt 0 ]; then
        echo "The Azure build succeeded with issues!" > build_status.txt
        exit 1
      else
        echo "The Azure build succeeded" > build_status.txt
      fi
    displayName: Run test bot
    env:
      HOMEBREW_DEVELOPER: 1
      HOMEBREW_NO_AUTO_UPDATE: 1
      HOMEBREW_VERBOSE: 1
      HOMEBREW_VERBOSE_USING_DOTS: 1
    continueOnError: true
  - bash: |
      cp /tmp/bottles/*.bottle.* $(Build.ArtifactStagingDirectory)
      cp /tmp/bottles/build_status.txt $(Build.ArtifactStagingDirectory)
    displayName: Copy json & bottle files
    condition: always()
    continueOnError: true
  - task: PublishPipelineArtifact@0
    inputs:
      artifactName: bottle-linux
      targetPath: $(Build.ArtifactStagingDirectory)
    displayName: Publish bottle-linux
    condition: always()

